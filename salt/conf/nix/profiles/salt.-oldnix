#with import (builtins.fetchGit {
#    # Descriptive name to make the store path easier to identify
#    url = https://github.com/nixos/nixpkgs-channels/;
#    # `git ls-remote https://github.com/nixos/nixpkgs-channels nixos-unstable`
#    ref = "refs/heads/nixos-19.09";
#    rev = "d1918bb0d90ee99601b18be55bba0fd78904e2a3";
#}) {};

let
  pkgs = import (builtins.fetchGit {
    # Descriptive name to make the store path easier to identify
    url = https://github.com/nixos/nixpkgs-channels/;
    # `git ls-remote https://github.com/nixos/nixpkgs-channels nixos-unstable`
    ref = "refs/heads/nixos-19.09";
    # rev = "bf7c0f0461e047bec108a5c5d5d1b144289a65ba";
    rev = "4a0df0ce263634ea0e5d406931f62e2c21b5f6c7";
  }) {};

  pkgs_latest = import<nixpkgs> {};

  commentjson = pkgs.python36Packages.buildPythonPackage rec {
    pname = "commentjson";
    version = "0.8.3";
    name = "${pname}-${version}";
    doCheck = false;

    src = pkgs.python36Packages.fetchPypi {
      inherit pname version;
      extension = "tar.gz";
      sha256 = "0lm6l9d1bh254ss2xvis3lfyy5lw5xqzzq1wj1bl27p4kx8h71vg";
    };

    propagatedBuildInputs = with pkgs; [
      python36Packages.lark-parser
    ];

    meta = with pkgs.stdenv.lib; {
      homepage = https://github.com/vaidik/commentjson;
      description = "Helps you create JSON files with Python and JavaScript style inline comments";
      license = licenses.mit;
      authors = [ "Vaidik KAPOOR <kapoor.vaidik@gmail.com>" ];
      maintainers = [ "Ghislain LE MEUR" ];
    };
  };

  # setuptools = pkgs.python36Packages.buildPythonPackage rec {
  #   pname = "setuptools";
  #   version = "46.1.3";
  #   name = "${pname}-${version}";
  #   doCheck = false;

  #   src = pkgs.python36Packages.fetchPypi {
  #     inherit pname version;
  #     extension = "zip";
  #     sha256 = "1cdzyj135abfgjj2g8m24xb9j292al6ykrhy5c4gmmvcp9sh8pkr";
  #   };

  #   meta = with pkgs.stdenv.lib; {
  #     homepage = https://github.com/pypa/setuptools;
  #     description = "Setuptools is a fully-featured, actively-maintained, and stable library designed to facilitate packaging Python projects";
  #     license = licenses.mit;
  #     maintainers = [ "Ghislain LE MEUR" ];
  #   };
  # };

  # python36Packages.setuptools is buggy in 19.09 and can be safely removed in 20.03 (python37Packages.setuptools or python38Packages.setuptools)
  setuptoolssrc = pkgs.stdenv.mkDerivation rec {
    pname = "setuptools";
    version = "46.1.3";
    name = "${pname}-${version}-sdist.tar.gz";

    src = pkgs.fetchFromGitHub {
      owner = "pypa";
      repo = pname;
      rev = "v${version}";
      sha256 = "1f6bp3qy5zvykimadk8k11k3629hmnwlw2cfw4vwcsvdarhig673";
      name = "${pname}-${version}-source";
    };

    buildPhase = ''
      ${pkgs.python36Packages.python.interpreter} bootstrap.py
      ${pkgs.python36Packages.python.interpreter} setup.py sdist --formats=gztar
    '';

    installPhase = ''
      echo "Moving sdist..."
      mv dist/*.tar.gz $out
    '';
  };

  setuptools = pkgs.python36Packages.buildPythonPackage rec {
    pname = "setuptools";
    version = "46.1.3";
    format = "other";

    src = setuptoolssrc;

    nativeBuildInputs = [
      pkgs.python36Packages.bootstrapped-pip
      (pkgs.python36Packages.pipInstallHook.override{pip=null;})
      (pkgs.python36Packages.setuptoolsBuildHook.override{setuptools=null; wheel=null;})
    ];

    preBuild = pkgs.stdenv.lib.strings.optionalString (!pkgs.stdenv.hostPlatform.isWindows) ''
      export SETUPTOOLS_INSTALL_WINDOWS_SPECIFIC_FILES=0
    '';

    pipInstallFlags = [ "--ignore-installed" ];

    # Adds setuptools to nativeBuildInputs causing infinite recursion.
    catchConflicts = false;

    # Requires pytest, causing infinite recursion.
    doCheck = false;

    meta = with pkgs.stdenv.lib; {
      description = "Utilities to facilitate the installation of Python packages";
      homepage = "https://pypi.python.org/pypi/setuptools";
      license = with licenses; [ psfl zpl20 ];
      maintainers = [ "Ghislain LE MEUR" ];
    };
  };

  vscsaltsrc = pkgs.python36Packages.buildPythonApplication rec {
    pname = "vscsaltsrc";
    version = "3001.0.0";
    name = "${pname}-${version}";
    doCheck = false;

    src = ../../saltstack/src;

    # src = fetchFromGitHub {
    #   owner = "gigi206";
    #   repo = "salt";
    #   # rev = "vsc3000";
    #   rev = "742781c358d65c8849a6a6f5b8f4bb3dcefc203a";
    #   # nix-prefetch-url --unpack https://github.com/gigi206/vscode-anywhere/archive/b09b13992fa6c57647eea63274e67d45131e1e39.tar.gz
    #   sha256 = "02cgs6b1rmh8hmcwm5wpxxg32p3km9c05606pykv49qq1spd6p38";
    # };

    propagatedBuildInputs = with pkgs; [
      commentjson
      openssl
      # libgit2
      # python36Packages.pygit2
      # gitMinimal
      # setuptools and pip (pkg_resources) are required by the pip module/state
      # python36Packages.setuptools
      setuptools
      python36Packages.pip
      python36Packages.GitPython
      python36Packages.jinja2
      python36Packages.markupsafe
      python36Packages.msgpack
      python36Packages.pycrypto
      # python36Packages.pycryptodome
      # python36Packages.m2crypto
      python36Packages.pyyaml
      python36Packages.pyzmq
      python36Packages.requests
    ];
  };

  vscsalt = pkgs.stdenv.mkDerivation rec {
    pname = "vscsalt";
    version = "3001.0.0";
    name = "${pname}-${version}";

    # src = vscsaltsrc.src;
    # doCheck = false;

    #buildInputs = with pkgs_latest; [
    buildInputs = with pkgs; [
      # glibcLocales
      gitMinimal
      vscsaltsrc
    ];

    meta = with pkgs.stdenv.lib; {
      homepage = https://saltstack.com;
      description = "Portable, distributed, remote execution and configuration management system";
      maintainers = [ "Ghislain LE MEUR" ];
      # authors = [ "Ghislain LE MEUR" ];
      license = licenses.mit;
    };
  };
in vscsalt