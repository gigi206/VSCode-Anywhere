default:
  enabled: False
  extensions: []
  pecl:
    opts:
      global: {}
      install: {}
      update: {}
    pkgs: {}
  composer:
    opts:
      global: {}
      install: {}
      update: {}
    pkgs:
      squizlabs/php_codesniffer:
        enabled: True
        version: '@stable'
      phpunit/phpunit:
        enabled: True
        version: '@stable'
      friendsofphp/php-cs-fixer:
        enabled: True
        version: '@stable'
  vscode:
    extensions:
      bmewburn.vscode-intelephense-client:
        enabled: True
        version: null
        settings:
          php.suggest.basic: False
          "[php]":
            editor.defaultFormatter: bmewburn.vscode-intelephense-client
      MehediDracula.php-namespace-resolver:
        enabled: True
        version: null
      felixfbecker.php-debug:
        enabled: True
        version: null
      brapifra.phpserver:
        enabled: True
        version: null
      junstyle.php-cs-fixer:
        enabled: True
        version: null
      ikappas.phpcs:
        enabled: True
        version: null
      ecodes.vscode-phpmd:
        enabled: True
        version: null
      recca0120.vscode-phpunit:
        enabled: True
        version: null
      # felixfbecker.php-intellisense:
      #   enabled: True
      #   version: null
      #   settings:
      #     php.suggest.basic: False
  zeal:
    docsets:
      PHP:
        enabled: True
Windows:
  env:
    PATH: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'composer', 'current', 'home', 'vendor', 'bin') }}
    COMPOSER_HOME: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'persist', 'composer', 'home') }}
    PHP_INI_SCAN_DIR: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'php', 'current', 'cli') }};{{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'php', 'current', 'cli', 'conf.d') }}
  extensions:
    - openssl
  extension_dir: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'php', 'current', 'cli', 'conf.d') }}
  vscode:
    settings:
      php.validate.executablePath: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'php', 'current', 'php.exe') }}
    extensions:
      brapifra.phpserver:
        settings:
          phpserver.phpPath: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'php', 'current', 'php.exe') }}
      junstyle.php-cs-fixer:
        settings:
          php-cs-fixer.executablePathWindows: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'persist', 'composer', 'install', 'vendor', 'bin', 'php-cs-fixer.bat') }}
      ikappas.phpcs:
        settings:
          phpcs.executablePath: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'persist', 'composer', 'install', 'vendor', 'bin', 'phpcs.bat') }}
      recca0120.vscode-phpunit:
        settings:
          phpunit.php: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'php', 'current', 'php.exe') }}
          phpunit.phpunit: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'persist', 'composer', 'install', 'vendor', 'bin', 'phpunit.bat') }}
      # felixfbecker.php-intellisense:
      #   settings:
      #     php.executablePath: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'php-net', 'current', 'php.exe') }}
  composer:
    json: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'persist', 'composer', 'install', 'composer.json') }}
    opts:
      global:
        php: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'php', 'current', 'php.exe') }}
        composer: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'composer', 'current', 'composer.phar') }}
        composer_home: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'persist', 'composer', 'home') }}
        env:
          - PHP_INI_SCAN_DIR: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'php', 'current', 'cli') }};{{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'php', 'current', 'cli', 'conf.d') }}
      install: {}
      update: {}
  scoop:
    pkgs:
      php:
        enabled: True
      php-xdebug:
        enabled: True
        opts:
          install:
            # Must be installed after php else the file scoop\persist\php\cli\conf.d\xdebug.ini is not created
            require:
              - scoop: php
          update:
            require:
              - scoop: php
      composer:
        enabled: True
        version: null
Linux:
  # php-config --extension-dir
  # extension_dir: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('vscode-anywhere', 'home', '.nix-profile', 'lib', 'php', 'extensions') }}
  env:
    PATH: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('vscode-anywhere', 'php', 'composer', 'home', 'vendor', 'bin') }}
    COMPOSER_HOME: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('vscode-anywhere', 'php', 'composer', 'home') }}
    # PHP_INI_SCAN_DIR: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('vscode-anywhere', 'home', '.nix-profile', 'etc', 'php.d') }}
  composer:
    json: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('vscode-anywhere', 'php', 'composer', 'install', 'composer.json') }}
    opts:
      global:
        # php: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('vscode-anywhere', 'home', '.nix-profile', 'bin', 'php') }}
        # composer: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('vscode-anywhere', 'home', '.nix-profile', 'bin', 'composer') }}
        composer: /home/linuxbrew/.linuxbrew/bin/composer
        composer_home: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('vscode-anywhere', 'php', 'composer', 'home') }}
        # env:
        #   # see php-config --ini-dir
        #   - PHP_INI_SCAN_DIR: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('vscode-anywhere', 'home', '.nix-profile', 'etc', 'php.d') }}
      install: {}
      update: {}
  vscode:
    settings:
      # php.validate.executablePath: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('vscode-anywhere', 'home', '.nix-profile', 'bin', 'php') }}
      php.validate.executablePath: /home/linuxbrew/.linuxbrew/bin/php
    extensions:
      brapifra.phpserver:
        settings:
          # phpserver.phpPath: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('vscode-anywhere', 'home', '.nix-profile', 'bin', 'php') }}
          phpserver.phpPath: /home/linuxbrew/.linuxbrew/bin/php
      junstyle.php-cs-fixer:
        settings:
          php-cs-fixer.executablePath: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('vscode-anywhere', 'php', 'composer', 'install', 'vendor', 'bin', 'php-cs-fixer') }}
      ikappas.phpcs:
        settings:
          phpcs.executablePath: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('vscode-anywhere', 'php', 'composer', 'install', 'vendor', 'bin', 'phpcs') }}
      recca0120.vscode-phpunit:
        settings:
          # phpunit.php: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('vscode-anywhere', 'home', '.nix-profile', 'bin', 'php') }}
          phpunit.php: /home/linuxbrew/.linuxbrew/bin/php
          phpunit.phpunit: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('vscode-anywhere', 'php', 'composer', 'install', 'vendor', 'bin', 'phpunit') }}
      # felixfbecker.php-intellisense:
      #   settings:
      #     php.executablePath: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('vscode-anywhere', 'home', '.nix-profile', 'bin', 'php') }}
      #     # php.executablePath: /home/linuxbrew/.linuxbrew/bin/php
  brew:
    pkgs:
      # php installs the perl package but
      # make and gcc packages are required by perl
      # because when the installation of perl, it runs "cpan -i XML::Parser"
      # and XML::Parser and requires make and gcc packages
      make:
        enabled: True
      gcc:
        enabled: True
      # perl:
      #   enabled: True
      php:
        enabled: True
        opts:
          install:
            require:
              - pkg: make
              - pkg: gcc
      composer:
        enabled: True
  pecl:
    pkgs:
      xdebug:
        enabled: True
        version: null
        opts:
          install: {}
          update: {}
          uninstall: {}
  # nix:
  #   pkgs:
  #     php:
  #       enabled: True
  #       attr: nixpkgs.php
  #     php-xdebug:
  #       enabled: True
  #     php-composer:
  #       enabled: True