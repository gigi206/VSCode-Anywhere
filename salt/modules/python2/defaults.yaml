{%- from 'salt/modules/python3/map.jinja' import python3 with context %}
{%- if salt['grains.get']('kernel') == 'Windows' %}
  {%- set path = [salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'python27', 'current', 'Scripts')] %}
  {%- if salt['pillar.get']('vscode-anywhere:python2:anaconda', False) %}
    {%- do path.append(salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'anaconda2', 'current')) %}
    {%- do path.append(salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'anaconda2', 'current', 'Library', 'mingw-w64', 'bin')) %}
    {%- do path.append(salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'anaconda2', 'current', 'Library', 'usr', 'bin')) %}
    {%- do path.append(salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'anaconda2', 'current', 'Library', 'bin')) %}
    {%- do path.append(salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'anaconda2', 'current', 'Library', 'Scripts')) %}
    {%- set pythonPath = salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'anaconda2', 'current', 'python.exe') %}
    {%- set autopep8Path = salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'anaconda2', 'current', 'Scripts', 'autopep8.exe') %}
    {%- set poetryPath = salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'anaconda2', 'current', 'Scripts', 'poetry.exe') %}
    {%- set flake8Path = salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'anaconda2', 'current', 'Scripts', 'flake8.exe') %}
    {%- set nosetestPath = salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'anaconda2', 'current', 'Scripts', 'nosetests.exe') %}
    {%- set pytestPath = salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'anaconda2', 'current', 'Scripts', 'pytest.exe') %}
    {%- set pipenvPath = salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'anaconda2', 'current', 'Scripts', 'pipenv.exe') %}
    {%- set pipPath = salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'anaconda2', 'current', 'Scripts', 'pip.exe') %}
  {%- else %}
    {%- set pythonPath = salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'python27', 'current', 'python.exe') %}
    {%- set autopep8Path = salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'python27', 'current', 'Scripts', 'autopep8.exe') %}
    {%- set poetryPath = salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'python27', 'current', 'Scripts', 'poetry.exe') %}
    {%- set flake8Path = salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'python27', 'current', 'Scripts', 'flake8.exe') %}
    {%- set nosetestPath = salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'python27', 'current', 'Scripts', 'nosetests.exe') %}
    {%- set pytestPath = salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'python27', 'current', 'Scripts', 'pytest.exe') %}
    {%- set pipenvPath = salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'python27', 'current', 'Scripts', 'pipenv.exe') %}
    {%- set pipPath = salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'python27', 'current', 'Scripts', 'pip.exe') %}
  {%- endif %}
{%- else %}
  {%- set path = [salt['grains.get']('vscode-anywhere:apps:path') | path_join('vscode-anywhere', 'home', '.local', 'bin')] %}
  {%- if salt['pillar.get']('vscode-anywhere:python2:anaconda', False) %}
    {%- do path.append('/home/linuxbrew/.linuxbrew/opt/anaconda2/bin') %}
    {%- set pythonPath = '/home/linuxbrew/.linuxbrew/opt/anaconda2/bin/python2' %}
    {%- set autopep8Path = '/home/linuxbrew/.linuxbrew/opt/anaconda2/bin/autopep8' %}
    {%- set poetryPath = '/home/linuxbrew/.linuxbrew/opt/anaconda2/bin/poetry' %}
    {%- set flake8Path = '/home/linuxbrew/.linuxbrew/opt/anaconda2/bin/flake8' %}
    {%- set nosetestPath = '/home/linuxbrew/.linuxbrew/opt/anaconda2/bin/nosetests' %}
    {%- set pytestPath = '/home/linuxbrew/.linuxbrew/opt/anaconda2/bin/pytest' %}
    {%- set pipenvPath = '/home/linuxbrew/.linuxbrew/opt/anaconda2/bin/pipenv' %}
    {%- set pipPath = '/home/linuxbrew/.linuxbrew/opt/anaconda2/bin/pip' %}
  {%- else %}
    {%- set pythonPath = salt['grains.get']('vscode-anywhere:apps:path') | path_join('vscode-anywhere', 'home', '.nix-profile', 'bin', 'python2') %}
    {%- set autopep8Path = salt['grains.get']('vscode-anywhere:apps:path') | path_join('vscode-anywhere', 'home', '.nix-profile', 'bin', 'autopep8') %}
    {%- set poetryPath = salt['grains.get']('vscode-anywhere:apps:path') | path_join('vscode-anywhere', 'home', '.nix-profile', 'bin', 'poetry') %}
    {%- set flake8Path = salt['grains.get']('vscode-anywhere:apps:path') | path_join('vscode-anywhere', 'home', '.nix-profile', 'bin', 'flake8') %}
    {%- set nosetestPath = salt['grains.get']('vscode-anywhere:apps:path') | path_join('vscode-anywhere', 'home', '.nix-profile', 'bin', 'nosetests') %}
    {%- set pytestPath = salt['grains.get']('vscode-anywhere:apps:path') | path_join('vscode-anywhere', 'home', '.local', 'bin', 'pytest') %}
    {%- set pipenvPath = salt['grains.get']('vscode-anywhere:apps:path') | path_join('vscode-anywhere', 'home', '.local', 'bin', 'pipenv') %}
    {%- set pipPath = salt['grains.get']('vscode-anywhere:apps:path') | path_join('vscode-anywhere', 'home', '.nix-profile', 'bin', 'pip2') %}
  {%- endif %}
{%- endif %}
default:
  enabled: False
  anaconda: False
  anaconda_update: False
  pip:
    opts:
      global:
        bin_env: {{ pipPath }}
      install:
        upgrade: False
      update:
        upgrade: True
      uninstall: {}
    pkgs:
      # pip:
      #   enabled: True
      #   version: null
      rope:
        enabled: True
        version: null
        opts:
          install: {}
          update: {}
          uninstall: {}
      flake8:
        enabled: True
        version: null
        opts:
          install: {}
          update: {}
          uninstall: {}
      autopep8:
        enabled: True
        version: null
        opts:
          install: {}
          update: {}
          uninstall: {}
      ptvsd:
        enabled: True
        version: null
        opts:
          install: {}
          update: {}
          uninstall: {}
      nose:
        enabled: True
        version: null
        opts:
          install: {}
          update: {}
          uninstall: {}
      pytest:
        enabled: True
        version: null
        opts:
          install: {}
          update: {}
          uninstall: {}
      pytest-xdist:
        enabled: True
        version: null
        opts:
          install: {}
          update: {}
          uninstall: {}
      poetry:
        enabled: True
        version: null
        opts:
          install: {}
          update: {}
          uninstall: {}
      pipenv:
        enabled: True
        version: null
        opts:
          install: {}
          update: {}
          uninstall: {}
  vscode:
    extensions:
      ms-python.python:
        enabled: True
        version: null
      VisualStudioExptTeam.vscodeintellicode:
        enabled: True
        version: null
      ms-python.vscode-pylance:
        enabled: True
        version: null
        settings:
          python.analysis.typeCheckingMode: basic
          python.languageServer: Pylance
      # ms-pyright.pyright:
      #   enabled: True
      #   version: null
      #   settings:
      #     pyright.disableLanguageServices: True
      # tushortz.python-extended-snippets:
      #   enabled: True
      #   version: null
      kevinrose.vsc-python-indent:
        enabled: True
        version: null
      littlefoxteam.vscode-python-test-adapter:
        enabled: True
        version: null
        settings:
          python.testing.pytestEnabled: True
          # pythonTestExplorer.testFramework: pytest
    settings:
      code-runner.executorMap.python: $pythonPath -u $fullFileName
      python.linting.pylintEnabled: False
      python.linting.flake8Enabled: True
      python.linting.enabled: True
      # python.jediEnabled: False
      python.autoComplete.addBrackets: True
      # python.disableInstallationCheck: True
      # '[python]':
      #   editor.formatOnSave: True
      # python.analysis.disabled:
      #   - undefined-variable
      #   - unresolved-import
      dash.languageIdToDocsetMap.python:
        - django
        - twisted
        - sphinx
        - flask
        - tornado
        - sqlalchemy
        - numpy
        - scipy
        - salt
        - pandas
        - matplotlib
        - cvp
      python.pythonPath: {{ pythonPath }}
      python.formatting.autopep8Path: {{ autopep8Path }}
      python.formatting.provider: autopep8
      python.poetryPath: {{ poetryPath }}
      python.pipenvPath: {{ pipenvPath }}
      python.linting.flake8Path: {{ flake8Path }}
      python.testing.nosetestPath: {{ nosetestPath }}
      python.testing.pytestPath: {{ pytestPath }}
  zeal:
    docsets:
      Python_2:
        enabled: True
      PEPs:
        enabled: True
Windows:
  env:
    PATH: {{ path | join(';') }}
  {%- if not python3.enabled %}
  vscode:
    settings:
      python.workspaceSymbols.ctagsPath: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'ctags', 'current', 'ctags.exe') }}
    {%- if not salt['pillar.get']('vscode-anywhere:python3:anaconda', False) and salt['pillar.get']('vscode-anywhere:python2:anaconda', False) %}
      python.condaPath: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('scoop', 'apps', 'anaconda2', 'current', 'Scripts', 'conda.exe') }}
    {%- endif %}
  {%- endif %}
  scoop:
    pkgs:
      ctags:
        enabled: True
    {%- if salt['pillar.get']('vscode-anywhere:python2:anaconda', False) %}
      anaconda2:
        enabled: True
    {%- endif %}
Linux:
  env:
    PATH: {{ path | join(':') | json }}
  {%- if not python3.enabled %}
  vscode:
    settings:
      python.workspaceSymbols.ctagsPath: /home/linuxbrew/.linuxbrew/bin/ctags
    {%- if not salt['pillar.get']('vscode-anywhere:python3:anaconda', False) and salt['pillar.get']('vscode-anywhere:python2:anaconda', False) %}
      python.condaPath: /home/linuxbrew/.linuxbrew/opt/anaconda2/conda
    {%- endif %}
  {%- endif %}
    PYTHONPATH: {{ salt['grains.get']('vscode-anywhere:apps:path') | path_join('vscode-anywhere', 'home', '.local', 'python2.7', 'site-packages') }}
  pip:
    {%- if salt['pillar.get']('vscode-anywhere:python2:anaconda', False) %}
    opts:
      global:
        env_vars:
          PYTHONPATH: ''
    {%- endif %}
    pkgs:
      setuptools:
        enabled: True
        version: null
        opts:
          install: {}
          update: {}
          uninstall: {}
      rope:
        enabled: False
      flake8:
        enabled: False
      autopep8:
        enabled: False
      nose:
        enabled: False
      peotry:
        enabled: False
  brew:
    pkgs:
      ctags:
        enabled: True
    {%- if salt['pillar.get']('vscode-anywhere:python2:anaconda', False) %}
      anaconda2:
        enabled: True
    {%- endif %}
  nix:
    pkgs:
      python:
        enabled: True
        attr: nixpkgs.python27Full
      python2.7-pip:
        enabled: True
        attr: nixpkgs.python27Packages.pip
    {#-
    {%- if not salt['pillar.get']('vscode-anywhere:python2:anaconda', False) %}
      python2.7-rope:
        enabled: True
        attr: nixpkgs.python27Packages.rope
      python2.7-flake8:
        enabled: True
        attr: nixpkgs.python27Packages.flake8
      python2.7-autopep8:
        enabled: True
        attr: nixpkgs.python27Packages.autopep8
      python2.7-nose:
        enabled: True
        attr: nixpkgs.python27Packages.nose
      python2.7-poetry:
        enabled: True
        attr: nixpkgs.python27Packages.poetry
    {%- endif %}
    #}