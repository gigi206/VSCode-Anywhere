{
"base": {
    "proxy": { "url": null,
               "login": null,
               "password": null },
    "junest_terminal_opts": "/bin/bash",
    "zeal_enabled": false
},
"extensions": {
    "minimal": {
        "enabled": false,
        "cmd_pre": null,
        "junest_cmd_pre": null,
        "junest_pkg": [ "nautilus" ],
        "vsc_pkg": null,
        "vsc_settings": { "workbench.settings.editor": "json",
                          "editor.multiCursorModifier": "ctrlCmd" },
        "vsc_keyboard": null,
        "junest_cmd_post": null,
        "cmd_post": null,
        "junest_cmd_update": null,
        "cmd_update": null,
        "zeal_pkg": null,
        "junest_env": { "PATH": "/usr/bin:/usr/local/bin:/usr/local/sbin",
                        "LD_LIBRARY_PATH": "/usr/local/lib",
                        "PROOT_NO_SECCOMP": 1,
                        "QT_AUTO_SCREEN_SCALE_FACTOR": 0 },
        "vsc_env": { "PATH": "/usr/bin:/usr/local/bin:/usr/local/sbin",
                     "LD_LIBRARY_PATH": "/usr/local/lib",
                     "PROOT_NO_SECCOMP": 1,
                     "QT_AUTO_SCREEN_SCALE_FACTOR": 0 }
    },
    "telemetry": {
        "enabled": false,
        "cmd_pre": null,
        "junest_cmd_pre": null,
        "junest_pkg": null,
        "vsc_pkg": null,
        "vsc_settings": { "telemetry.enableCrashReporter": false,
                          "telemetry.enableTelemetry": false,
                          "code-runner.enableAppInsights": false,
                          "gitlens.advanced.telemetry.enabled": false },
        "vsc_keyboard": null,
        "junest_cmd_post": null,
        "cmd_post": null,
        "junest_cmd_update": null,
        "cmd_update": null,
        "zeal_pkg": null,
        "junest_env": null,
        "vsc_env": null
    },
    "general": {
        "enabled": false,
        "cmd_pre": null,
        "junest_cmd_pre": [ { "cmd": "test -f ~/.config/Code/User/projects.json || (mkdir -p ~/.config/Code/User && echo -e '[\\n\t{\\n\t\t\"name\": \"VSCode-Anywhere\",\\n\t\t\"rootPath\": \"/VSCode-Anywhere\",\\n\t\t\"paths\": [],\\n\t\t\"group\": \"\"\\n\t}\\n]' > ~/.config/Code/User/projects.json)", "chroot": "namespace" } ],
        "junest_pkg": [ "firefox" ],
        "vsc_pkg": [ "alefragnani.Bookmarks",
                     "alefragnani.project-manager",
                     "christian-kohler.path-intellisense",
                     "CoenraadS.bracket-pair-colorizer",
                     "formulahendry.code-runner",
                     "spywhere.guides",
                     "ybaumes.highlight-trailing-white-spaces",
                     "Rubymaniac.vscode-paste-and-indent",
                     "Gruntfuggly.todo-tree",
                     "axosoft.gitkraken-glo" ],
        "vsc_settings": { "editor.renderIndentGuides": false,
                          "todo-tree.customHighlight": {
                            "TODO": {
                              "icon": "check",
                              "fontWeight": 900,
                              "foreground": "white",
                              "background": "magenta",
                              "opacity": 50,
                              "iconColour": "pink" },
                            "FIXME": {
                              "icon": "alert",
                              "fontWeight": 900,
                              "foreground": "white",
                              "background": "yellow",
                              "opacity": 50,
                              "iconColour": "yellow" }},
                          "breadcrumbs.enabled": false },
        "vsc_keyboard": [ { "key": "alt+l", "command": "bookmarks.toggle", "when": "editorTextFocus" },
                          { "key": "ctrl+[IntlBackslash]", "command": "workbench.action.toggleActivityBarVisibility" } ],
        "junest_cmd_post": null,
        "cmd_post": null,
        "junest_cmd_update": null,
        "cmd_update": null,
        "zeal_pkg": null,
        "junest_env": null,
        "vsc_env": null
    },
    "git": {
        "enabled": false,
        "cmd_pre": null,
        "junest_cmd_pre": null,
        "junest_pkg": [ "git",
                        "git-lfs",
                        "nodejs" ],
        "vsc_pkg": [ "donjayamanne.githistory",
                     "eamodio.gitlens",
                     "Hirse.vscode-ungit",
                     "lamartire.git-indicators" ],
        "vsc_settings": { "gitlens.defaultGravatarsStyle": "retro",
                          "ungit.showButton": true },
        "vsc_keyboard": null,
        "junest_cmd_post": [ { "cmd": "chmod +x \"${JunestExternalPath}${VSCAppPath_extensions}/hirse.vscode-\"*\"/node_modules/ungit/bin/credentials-helper\"", "chroot": "namespace" } ],
        "cmd_post": null,
        "junest_cmd_update": [ { "cmd": "chmod +x \"${JunestExternalPath}${VSCAppPath_extensions}/hirse.vscode-\"*\"/node_modules/ungit/bin/credentials-helper\"", "chroot": "namespace" } ],
        "cmd_update": null,
        "zeal_pkg": null,
        "junest_env": null,
        "vsc_env": null
    },
    "theme": {
        "enabled": false,
        "cmd_pre": null,
        "junest_cmd_pre": null,
        "junest_pkg": null,
        "vsc_pkg": [ "xaver.theme-ysgrifennwr",
                     "yogipatel.solarized-light-no-bold",
                     "vscode-icons-team.vscode-icons",
                     "zhuangtongfa.Material-theme" ],
        "vsc_settings": { "workbench.iconTheme": "vscode-icons",
                          "workbench.colorTheme": "One Dark Pro",
                          "vsicons.dontShowNewVersionMessage": true,
                          "window.titleBarStyle": "custom",
                          "window.menuBarVisibility": "toggle",
                          "workbench.colorCustomizations": {
                              "[Ysgrifennwr]": {
                                  "statusBar.background": "#edece8",
                                  "statusBar.foreground": "#42424280" },
                              "[One Dark Pro]": {
                                  "editor.selectionHighlightBackground": "#ffffff10",
                                  "editor.selectionHighlightBorder": "#ffffff10" }} },
        "zeal_pkg": null,
        "junest_env": null,
        "vsc_env": null
    },
    "VSC-fonts": {
        "enabled": false,
        "cmd_pre": null,
        "junest_cmd_pre": null,
        "junest_pkg": [ "otf-fira-code" ],
        "vsc_pkg": null,
        "vsc_settings": { "editor.fontLigatures": true,
                          "editor.fontFamily": "Fira Code" },
        "vsc_keyboard": null,
        "junest_cmd_post": null,
        "cmd_post": null,
        "junest_cmd_update": null,
        "cmd_update": null,
        "zeal_pkg": null,
        "junest_env": null,
        "vsc_env": null
    },
    "tmux-gigix": {
        "enabled": false,
        "cmd_pre": [ "[ -f \"${FontsDir}/DejaVuSansMono-Bold-Oblique-Powerline.ttf\" ] || wget -qO \"${FontsDir}/DejaVuSansMono-Bold-Oblique-Powerline.ttf\" https://github.com/powerline/fonts/raw/master/DejaVuSansMono/DejaVu%20Sans%20Mono%20Bold%20Oblique%20for%20Powerline.ttf",
                     "[ -f \"${FontsDir}/DejaVuSansMono-Bold-Powerline.ttf\" ] || wget -qO \"${FontsDir}/DejaVuSansMono-Bold-Powerline.ttf\" https://github.com/powerline/fonts/raw/master/DejaVuSansMono/DejaVu%20Sans%20Mono%20Bold%20for%20Powerline.ttf",
                     "[ -f \"${FontsDir}/DejaVuSansMono-Oblique-Powerline.ttf\" ] || wget -qO \"${FontsDir}/DejaVuSansMono-Oblique-Powerline.ttf\" https://github.com/powerline/fonts/raw/master/DejaVuSansMono/DejaVu%20Sans%20Mono%20Oblique%20for%20Powerline.ttf",
                     "[ -f \"${FontsDir}/DejaVuSansMono-Powerline.ttf\" ] || wget -qO \"${FontsDir}/DejaVuSansMono-Powerline.ttf\" https://github.com/powerline/fonts/raw/master/DejaVuSansMono/DejaVu%20Sans%20Mono%20for%20Powerline.ttf" ],
        "junest_cmd_pre": null,
        "junest_pkg": [ "git",
                        "awk",
                        "zsh",
                        "zsh-completions",
                        "tmux" ],
        "vsc_pkg": null,
        "vsc_settings": { "terminal.integrated.shell.linux": "/usr/bin/zsh" },
        "vsc_keyboard": null,
        "junest_cmd_post": [ { "cmd": "test -d /opt/oh-my-zsh || git clone --depth=1 https://github.com/robbyrussell/oh-my-zsh.git /opt/oh-my-zsh", "chroot": "namespace" },
                             { "cmd": "[ -f /opt/zsh/.zshrc ] || (mkdir -p /opt/zsh && echo 'export ZSH=/opt/oh-my-zsh' > /opt/zsh/.zshrc && echo 'ZSH_THEME=robbyrussell' >> /opt/zsh/.zshrc && echo 'plugins=(git zsh-syntax-highlighting zsh-autosuggestions)' >> /opt/zsh/.zshrc && echo 'source /opt/oh-my-zsh/oh-my-zsh.sh' >> /opt/zsh/.zshrc && echo 'HISTFILE=/opt/zsh/zsh_history' >> /opt/zsh/.zshrc && echo PROMPT=\"'\"'%{$fg[green]%}%n%{$fg[white]%}@%{$fg[magenta]%}%m%{$fg[white]%}:%{$fg[cyan]%}%~%{$reset_color%} ${ret_status}$(git_prompt_info)%{$reset_color%}'\"'\" >> /opt/zsh/.zshrc)", "chroot": "namespace" },
                             { "cmd": "test -d /opt/oh-my-zsh/custom/plugins/zsh-syntax-highlighting || (cd /opt/oh-my-zsh/custom/plugins && git clone --depth=1 https://github.com/zsh-users/zsh-syntax-highlighting.git)", "chroot": "namespace" },
                             { "cmd": "test -d /opt/oh-my-zsh/custom/plugins/zsh-autosuggestions || (cd /opt/oh-my-zsh/custom/plugins && git clone --depth=1 https://github.com/zsh-users/zsh-autosuggestions.git)", "chroot": "namespace" },
                             { "cmd": "test -f /opt/oh-my-zsh/custom/VSCode-Anywhere.zsh || wget -qO /opt/oh-my-zsh/custom/VSCode-Anywhere.zsh https://raw.githubusercontent.com/gigi206/tmux-gigix/master/demo.zsh", "chroot": "namespace" },
                             { "cmd": "test -f /etc/tmux.conf || (wget -qO /etc/tmux.conf https://raw.githubusercontent.com/gigi206/tmux-gigix/master/tmux.conf && echo 'set-option -g default-shell /usr/bin/zsh' >> /etc/tmux.conf)", "chroot": "namespace" },
                             { "cmd": "test -x /usr/local/bin/tmux-gigix || (echo 'cd; unset FPATH; /usr/bin/tmux -2u attach -t VSCode-Anywhere || ZDOTDIR=/opt/zsh /usr/bin/tmux -2u new -s VSCode-Anywhere zsh' > /usr/local/bin/tmux-gigix && chmod +x /usr/local/bin/tmux-gigix)", "chroot": "namespace" } ],
        "cmd_post": null,
        "junest_cmd_update": [ { "cmd": "test -d /opt/oh-my-zsh && (cd /opt/oh-my-zsh && git pull origin master)", "chroot": "namespace" },
                               { "cmd": "test -d /opt/oh-my-zsh/custom/plugins/zsh-syntax-highlighting && (cd /opt/oh-my-zsh/custom/plugins/zsh-syntax-highlighting && git pull origin master)", "chroot": "namespace" },
                               { "cmd": "test -d /opt/oh-my-zsh/custom/plugins/zsh-autosuggestions && (cd /opt/oh-my-zsh/custom/plugins/zsh-autosuggestions && git pull origin master)", "chroot": "namespace" } ],
        "cmd_update": null,
        "zeal_pkg": null,
        "junest_env": null,
        "vsc_env": { "ZDOTDIR": "/opt/zsh" }
    },
    "vim-gigix": {
        "enabled": false,
        "cmd_pre": [ "[ -f \"${FontsDir}/DejaVuSansMono-Bold-Oblique-Powerline.ttf\" ] || wget -qO \"${FontsDir}/DejaVuSansMono-Bold-Oblique-Powerline.ttf\" https://github.com/powerline/fonts/raw/master/DejaVuSansMono/DejaVu%20Sans%20Mono%20Bold%20Oblique%20for%20Powerline.ttf",
                     "[ -f \"${FontsDir}/DejaVuSansMono-Bold-Powerline.ttf\" ] || wget -qO \"${FontsDir}/DejaVuSansMono-Bold-Powerline.ttf\" https://github.com/powerline/fonts/raw/master/DejaVuSansMono/DejaVu%20Sans%20Mono%20Bold%20for%20Powerline.ttf",
                     "[ -f \"${FontsDir}/DejaVuSansMono-Oblique-Powerline.ttf\" ] || wget -qO \"${FontsDir}/DejaVuSansMono-Oblique-Powerline.ttf\" https://github.com/powerline/fonts/raw/master/DejaVuSansMono/DejaVu%20Sans%20Mono%20Oblique%20for%20Powerline.ttf",
                     "[ -f \"${FontsDir}/DejaVuSansMono-Powerline.ttf\" ] || wget -qO \"${FontsDir}/DejaVuSansMono-Powerline.ttf\" https://github.com/powerline/fonts/raw/master/DejaVuSansMono/DejaVu%20Sans%20Mono%20for%20Powerline.ttf" ],
        "junest_cmd_pre": null,
        "junest_pkg": [ "python3",
                        "vi",
                        "vim" ],
        "vsc_pkg": null,
        "vsc_settings": null,
        "vsc_keyboard": null,
        "junest_cmd_post": [ { "cmd": "test -f /opt/vim-gigix/vimrc || (mkdir -p /opt/vim-gigix && wget -qO - https://raw.githubusercontent.com/gigi206/vim-gigix/master/.vimrc | sed 's@\\(.*dein#add.*Valloric/YouCompleteMe.*\\)@\"\\1@g' > /opt/vim-gigix/vimrc)", "chroot": "namespace" },
                             { "cmd": "test -d /opt/vim-gigix/bundle || (sh <(wget -qO - https://raw.githubusercontent.com/Shougo/dein.vim/master/bin/installer.sh) /opt/vim-gigix/bundle && VimPlugin=/opt/vim-gigix vim -c 'try | call dein#update() | call dein#recache_runtimepath() | finally | qall! | endtry' -N -u /opt/vim-gigix/vimrc -U NONE -i NONE -V1 -e -s && echo)", "chroot": "namespace" },
                             { "cmd": "test -f /opt/oh-my-zsh/custom/vim.zsh || (echo 'alias vim=\"VimPlugin=/opt/vim-gigix vim -u /opt/vim-gigix/vimrc\"' > /opt/oh-my-zsh/custom/vim.zsh)", "chroot": "namespace" } ],
        "cmd_post": null,
        "junest_cmd_update": [ { "cmd": "VimPlugin=/opt/vim-gigix vim -c 'try | call dein#update() | call dein#recache_runtimepath() | finally | qall! | endtry' -N -u /opt/vim-gigix/vimrc -U NONE -i NONE -V1 -e -s && echo", "chroot": "namespace" } ],
        "cmd_update": null,
        "zeal_pkg": [ "Vim" ],
        "junest_env": null,
        "vsc_env": null
    },
    "remote": {
        "enabled": false,
        "cmd_pre": null,
        "junest_cmd_pre": null,
        "junest_pkg": [ "openssh" ],
        "vsc_pkg": [ "ms-vscode-remote.vscode-remote-extensionpack" ],
        "vsc_settings": null,
        "vsc_keyboard": null,
        "junest_cmd_post": null,
        "cmd_post": null,
        "junest_cmd_update": null,
        "cmd_update": null,
        "zeal_pkg": null,
        "junest_env": null,
        "vsc_env": null
    },
    "python": {
        "enabled": false,
        "cmd_pre": null,
        "junest_cmd_pre": null,
        "junest_pkg": [ "python2",
                        "python2-pip",
                        "python3",
                        "python-pip",
                        "ctags",
                        "openssl-1.0" ],
        "vsc_pkg": [ "ms-python.python",
                     "VisualStudioExptTeam.vscodeintellicode",
                     "ms-pyright.pyright" ],
        "vsc_settings": { "python.linting.pylintEnabled": false,
                          "python.linting.flake8Enabled": true,
                          "python.linting.enabled": true,
                          "python.disableInstallationCheck": true,
                          "python.jediEnabled": false,
                          "[python]": { "editor.formatOnSave": true },
                          "python.formatting.provider": "black",
                          "python.formatting.blackPath": "/usr/bin/black",
                          "python.autoComplete.addBrackets": true },
        "vsc_keyboard": null,
        "junest_cmd_post": [ { "cmd": "pip2 install rope flake8 ptvsd nose pytest", "chroot": "namespace" },
                             { "cmd": "pip3 install rope black flake8 ptvsd nose pytest", "chroot": "namespace" } ],
        "cmd_post": null,
        "junest_cmd_update": [ { "cmd": "pip2 install -U rope flake8 ptvsd nose pytest", "chroot": "namespace" },
                               { "cmd": "pip3 install -U rope black flake8 ptvsd nose pytest", "chroot": "namespace" } ],
        "cmd_update": null,
        "zeal_pkg": [ "Python_2",
                      "Python_3",
                      "PEPs",
                      "Django",
                      "Flask" ],
        "junest_env": null,
        "vsc_env": null
    },
    "ruby": {
        "enabled": false,
        "cmd_pre": null,
        "junest_cmd_pre": null,
        "junest_pkg": [ "ruby",
                        "rubygems",
                        "gcc",
                        "make",
                        "autoconf",
                        "gmp",
                        "libxml2",
                        "libxslt" ],
        "vsc_pkg": [ "rebornix.Ruby",
                     "castwide.solargraph" ],
        "vsc_settings": { "ruby.lint": { "reek": true,
                                         "rubocop": false,
                                         "ruby": true,
                                         "fasterer": true,
                                         "debride": true,
                                         "ruby-lint": true },
                          "ruby.codeCompletion": false,
                          "ruby.format": false,
                          "ruby.intellisense": false,
                          "solargraph.autoformat": true,
                          "solargraph.hover": true,
                          "solargraph.completion": true,
                          "solargraph.diagnostics": true,
                          "solargraph.formatting": true },
        "vsc_keyboard": null,
        "junest_cmd_post": [ { "cmd": "gem list | egrep '^rdoc ' || PATH=$PATH:${Home_chroot}/.gem/ruby/2.5.0/bin gem install rdoc", "chroot": "namespace" },
                             { "cmd": "gem list | egrep '^fastri ' || PATH=$PATH:${Home_chroot}/.gem/ruby/2.5.0/bin gem install fastri", "chroot": "namespace" },
                             { "cmd": "gem list | egrep '^pkg-config ' || PATH=$PATH:${Home_chroot}/.gem/ruby/2.5.0/bin gem install pkg-config", "chroot": "namespace" },
                             { "cmd": "gem list | egrep '^nokogiri ' || PATH=$PATH:${Home_chroot}/.gem/ruby/2.5.0/bin gem install nokogiri -- --use-system-libraries --with-xml2-config=/usr/bin/xml2-config", "chroot": "namespace" },
                             { "cmd": "gem list | egrep '^rubygems-update ' || PATH=$PATH:${Home_chroot}/.gem/ruby/2.5.0/bin gem install rubygems-update", "chroot": "namespace" },
                             { "cmd": "gem list | egrep '^ruby-debug-ide ' || PATH=$PATH:${Home_chroot}/.gem/ruby/2.5.0/bin gem install ruby-debug-ide", "chroot": "namespace" },
                             { "cmd": "gem list | egrep '^rcodetools ' || PATH=$PATH:${Home_chroot}/.gem/ruby/2.5.0/bin gem install rcodetools", "chroot": "namespace" },
                             { "cmd": "gem list | egrep '^reek ' || PATH=$PATH:${Home_chroot}/.gem/ruby/2.5.0/bin gem install reek", "chroot": "namespace" },
                             { "cmd": "gem list | egrep '^fasterer ' || PATH=$PATH:${Home_chroot}/.gem/ruby/2.5.0/bin gem install fasterer", "chroot": "namespace" },
                             { "cmd": "gem list | egrep '^debride ' || PATH=$PATH:${Home_chroot}/.gem/ruby/2.5.0/bin gem install debride", "chroot": "namespace" },
                             { "cmd": "gem list | egrep '^ruby-lint ' || PATH=$PATH:${Home_chroot}/.gem/ruby/2.5.0/bin gem install ruby-lint", "chroot": "namespace" },
                             { "cmd": "gem list | egrep '^solargraph ' || PATH=$PATH:${Home_chroot}/.gem/ruby/2.5.0/bin gem install solargraph", "chroot": "namespace" } ],
        "cmd_post": null,
        "junest_cmd_update": [ { "cmd": "gem update rdoc fastri rubygems-update ruby-debug-ide rcodetools reek fasterer debride ruby-lint solargraph", "chroot": "namespace" } ],
        "cmd_update": null,
        "zeal_pkg": [ "Ruby",
                      "Ruby_2" ],
        "junest_env": { "PATH": "${Home_chroot}/.gem/ruby/2.5.0/bin" },
        "vsc_env": { "PATH": "${Home_chroot}/.gem/ruby/2.5.0/bin" }
    },
    "perl": {
        "enabled": false,
        "cmd_pre": null,
        "junest_cmd_pre": null,
        "junest_pkg": [ "perl",
                       "ctags",
                       "gcc",
                       "make" ],
        "vsc_pkg": [ "henriiik.vscode-perl",
                     "mortenhenriksen.perl-debug" ],
        "vsc_settings": { "perl.perltidy": "/usr/bin/site_perl/perltidy" },
        "vsc_keyboard": null,
        "junest_cmd_post": [ { "cmd": "test -x /usr/bin/site_perl/perltidy || yes yes | perl /usr/bin/core_perl/cpan Perl::Tidy", "chroot": "proot" } ],
        "cmd_post": null,
        "junest_cmd_update": [ { "cmd": "cpan Perl::Tidy", "chroot": "proot" } ],
        "cmd_update": null,
        "zeal_pkg": [ "Perl",
                      "Perl6" ],
        "junest_env": null,
        "vsc_env": null
    },
    "C/C++": {
        "enabled": false,
        "cmd_pre": null,
        "junest_cmd_pre": null,
        "junest_pkg": [ "gcc" ],
        "vsc_pkg": [ "ms-vscode.cpptools" ],
        "vsc_settings": null,
        "vsc_keyboard": null,
        "junest_cmd_post": null,
        "cmd_post": null,
        "junest_cmd_update": null,
        "cmd_update": null,
        "zeal_pkg": [ "C",
                      "C++" ],
        "junest_env": null,
        "vsc_env": null
    },
    "C#": {
        "enabled": false,
        "cmd_pre": null,
        "junest_cmd_pre": null,
        "junest_pkg": [ "dotnet-sdk",
                        "openssl" ],
        "vsc_pkg": [ "ms-vscode.csharp" ],
        "vsc_settings": null,
        "vsc_keyboard": null,
        "junest_cmd_post": null,
        "cmd_post": null,
        "junest_cmd_update": null,
        "cmd_update": null,
        "zeal_pkg": [ "NET_Framework" ],
        "junest_env": null,
        "vsc_env": null
    },
    "shell": {
        "enabled": false,
        "cmd_pre": null,
        "junest_cmd_pre": null,
        "junest_pkg": [ "shellcheck" ],
        "vsc_pkg": [ "timonwong.shellcheck",
                     "rogalmic.bash-debug" ],
        "vsc_settings": null,
        "vsc_keyboard": null,
        "junest_cmd_post": null,
        "cmd_post": null,
        "junest_cmd_update": null,
        "cmd_update": null,
        "zeal_pkg": [ "Bash",
                      "Zsh",
                      "Linux_Man_Pages" ],
        "junest_env": null,
        "vsc_env": null
    },
    "go": {
        "enabled": false,
        "cmd_pre": null,
        "junest_cmd_pre": null,
        "junest_pkg": [ "go",
                       "gcc" ],
        "vsc_pkg": [ "ms-vscode.go" ],
        "vsc_settings": { "go.useLanguageServer": true,
                          "go.liveErrors": { "enabled": true,
                                               "delay": 500 },
                          "go.lintTool": "gometalinter" },
        "vsc_keyboard": null,
        "junest_cmd_post": [ { "cmd": "test -f /opt/go-modules/bin/go-outline || GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v github.com/ramya-rao-a/go-outline", "chroot": "namespace" },
                             { "cmd": "test -f /opt/go-modules/bin/go-symbols || GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v github.com/acroca/go-symbols", "chroot": "namespace" },
                             { "cmd": "test -f /opt/go-modules/bin/gocode || GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v github.com/nsf/gocode", "chroot": "namespace" },
                             { "cmd": "test -f /opt/go-modules/bin/godef || GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v github.com/rogpeppe/godef", "chroot": "namespace" },
                             { "cmd": "test -f /opt/go-modules/bin/godoc || GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v golang.org/x/tools/cmd/godoc", "chroot": "namespace" },
                             { "cmd": "test -f /opt/go-modules/bin/gogetdoc || GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v github.com/zmb3/gogetdoc", "chroot": "namespace" },
                             { "cmd": "test -f /opt/go-modules/bin/golint || GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v golang.org/x/lint/golint", "chroot": "namespace" },
                             { "cmd": "test -f /opt/go-modules/bin/gomodifytags || GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v github.com/fatih/gomodifytags", "chroot": "namespace" },
                             { "cmd": "test -f /opt/go-modules/bin/gopkgs || GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v github.com/uudashr/gopkgs/cmd/gopkgs", "chroot": "namespace" },
                             { "cmd": "test -f /opt/go-modules/bin/gorename || GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v golang.org/x/tools/cmd/gorename", "chroot": "namespace" },
                             { "cmd": "test -f /opt/go-modules/bin/goreturns || GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v sourcegraph.com/sqs/goreturns", "chroot": "namespace" },
                             { "cmd": "test -f /opt/go-modules/bin/goimports || GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v golang.org/x/tools/cmd/goimports", "chroot": "namespace" },
                             { "cmd": "test -d /opt/go-modules/src/github.com/cweill/gotests || GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v github.com/cweill/gotests", "chroot": "namespace" },
                             { "cmd": "test -f /opt/go-modules/bin/guru || GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v golang.org/x/tools/cmd/guru", "chroot": "namespace" },
                             { "cmd": "test -f /opt/go-modules/bin/impl || GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v github.com/josharian/impl", "chroot": "namespace" },
                             { "cmd": "test -f /opt/go-modules/bin/goplay || GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v github.com/haya14busa/goplay/cmd/goplay", "chroot": "namespace" },
                             { "cmd": "test -f /opt/go-modules/bin/fillstruct || GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v github.com/davidrjenni/reftools/cmd/fillstruct", "chroot": "namespace" },
                             { "cmd": "test -f /opt/go-modules/bin/dlv || GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v github.com/derekparker/delve/cmd/dlv", "chroot": "namespace" },
                             { "cmd": "test -f /opt/go-modules/bin/gometalinter || GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v github.com/alecthomas/gometalinter", "chroot": "namespace" },
                             { "cmd": "test -f /opt/go-modules/bin/gotype-live || GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v github.com/tylerb/gotype-live", "chroot": "namespace" },
                             { "cmd": "test -f /opt/go-modules/bin/go-langserver || GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v github.com/sourcegraph/go-langserver", "chroot": "namespace" } ],
        "cmd_post": null,
        "junest_cmd_update": [ { "cmd": "GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v github.com/ramya-rao-a/go-outline", "chroot": "namespace" },
                               { "cmd": "GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v github.com/acroca/go-symbols", "chroot": "namespace" },
                               { "cmd": "GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v github.com/nsf/gocode", "chroot": "namespace" },
                               { "cmd": "GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v github.com/rogpeppe/godef", "chroot": "namespace" },
                               { "cmd": "GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v golang.org/x/tools/cmd/godoc" },
                               { "cmd": "GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v github.com/zmb3/gogetdoc", "chroot": "namespace" },
                               { "cmd": "GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v golang.org/x/lint/golint", "chroot": "namespace" },
                               { "cmd": "GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v github.com/fatih/gomodifytags", "chroot": "namespace" },
                               { "cmd": "GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v github.com/uudashr/gopkgs/cmd/gopkgs", "chroot": "namespace" },
                               { "cmd": "GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v golang.org/x/tools/cmd/gorename", "chroot": "namespace" },
                               { "cmd": "GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v sourcegraph.com/sqs/goreturns", "chroot": "namespace" },
                               { "cmd": "GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v golang.org/x/tools/cmd/goimports", "chroot": "namespace" },
                               { "cmd": "GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v github.com/cweill/gotests", "chroot": "namespace" },
                               { "cmd": "GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v golang.org/x/tools/cmd/guru", "chroot": "namespace" },
                               { "cmd": "GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v github.com/josharian/impl", "chroot": "namespace" },
                               { "cmd": "GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v github.com/haya14busa/goplay/cmd/goplay", "chroot": "namespace" },
                               { "cmd": "GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v github.com/davidrjenni/reftools/cmd/fillstruct", "chroot": "namespace" },
                               { "cmd": "GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v github.com/derekparker/delve/cmd/dlv", "chroot": "namespace" },
                               { "cmd": "GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v github.com/alecthomas/gometalinter", "chroot": "namespace" },
                               { "cmd": "GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v github.com/tylerb/gotype-live", "chroot": "namespace" },
                               { "cmd": "GOROOT='/usr/lib/go' GOPATH='/opt/go-modules' go get -u -v github.com/sourcegraph/go-langserver", "chroot": "namespace" } ],
        "cmd_update": null,
        "zeal_pkg": [ "Go" ],
        "junest_env": { "GOROOT": "/usr/lib/go",
                        "GOPATH": "/opt/go-modules",
                        "PATH": "/opt/go-modules/bin" },
        "vsc_env": { "GOROOT": "/usr/lib/go",
                     "GOPATH": "/opt/go-modules",
                     "PATH": "/opt/go-modules/bin" }
    },
    "java": {
        "enabled": false,
        "cmd_pre": null,
        "junest_cmd_pre": null,
        "junest_pkg": [ "jdk-openjdk" ],
        "vsc_pkg": [ "vscjava.vscode-java-pack" ],
        "vsc_settings": null,
        "vsc_keyboard": null,
        "junest_cmd_post": null,
        "cmd_post": null,
        "junest_cmd_update": null,
        "cmd_update": null,
        "zeal_pkg": [ "Java_SE10",
                      "Java_SE11" ],
        "junest_env": null,
        "vsc_env": null
    },
    "php": {
        "enabled": false,
        "cmd_pre": null,
        "junest_cmd_pre": null,
        "junest_pkg": [ "php" ],
        "vsc_pkg": [ "felixfbecker.php-intellisense",
                     "felixfbecker.php-debug" ],
        "vsc_settings": { "php.validate.run": "onType" },
        "vsc_keyboard": null,
        "junest_cmd_post": null,
        "cmd_post": null,
        "junest_cmd_update": null,
        "cmd_update": null,
        "zeal_pkg": [ "PHP",
                      "Laravel",
                      "Symfony",
                      "Zend_Framework_3" ],
        "junest_env": null,
        "vsc_env": null
    },
    "javascript": {
        "enabled": false,
        "cmd_pre": null,
        "junest_cmd_pre": null,
        "junest_pkg": [ "nodejs",
                         "yarn" ],
        "vsc_pkg": [ "waderyan.nodejs-extension-pack",
                     "leizongmin.node-module-intellisense",
                     "ms-vscode.vscode-typescript-tslint-plugin" ],
        "vsc_settings": { "eslint.alwaysShowStatus": true },
        "vsc_keyboard": null,
        "junest_cmd_post": [ { "cmd": "yarn global list eslint --depth=0 | grep -- '- eslint$' || yarn global add eslint", "chroot": "namespace" } ],
        "cmd_post": null,
        "junest_cmd_update": [ { "cmd": "yarn global upgrade", "chroot": "namespace" } ],
        "cmd_update": null,
        "zeal_pkg": [ "JavaScript",
                      "TypeScript",
                      "NodeJS",
                      "jQuery",
                      "jQuery_Mobile",
                      "jQuery_UI" ],
        "junest_env": null,
        "vsc_env": null
    },
    "html": {
        "enabled": false,
        "cmd_pre": null,
        "junest_cmd_pre": null,
        "junest_pkg": [ "jdk-openjdk" ],
        "vsc_pkg": [ "Zignd.html-css-class-completion",
                     "pranaygp.vscode-css-peek",
                     "bradgashler.htmltagwrap",
                     "smelukov.vscode-csstree",
                     "Umoxfo.vscode-w3cvalidation",
                     "vincaslt.highlight-matching-tag",
                     "formulahendry.auto-rename-tag",
                     "mrmlnc.vscode-autoprefixer",
                     "HookyQR.beautify",
                     "naumovs.color-highlight" ],
        "vsc_settings": null,
        "vsc_keyboard": null,
        "junest_cmd_post": null,
        "cmd_post": null,
        "junest_cmd_update": null,
        "cmd_update": null,
        "zeal_pkg": [ "CSS",
                      "HTML",
                      "Emmet",
                      "Sass" ],
        "junest_env": null,
        "vsc_env": null
    },
    "powershell": {
        "enabled": false,
        "cmd_pre": null,
        "junest_cmd_pre": null,
        "junest_pkg": [ "awk",
                        "git",
                        "dotnet-sdk" ],
        "vsc_pkg": [ "ms-vscode.PowerShell" ],
        "vsc_settings": { "dash.docset.powershell": [ "posh" ],
                          "powershell.powerShellExePath": "/opt/powershell/current/bin/pwsh" },
        "vsc_keyboard": null,
        "junest_cmd_post": [ { "cmd": "VERSION=$(git ls-remote --tags https://github.com/PowerShell/PowerShell.git | egrep '/v[0-9]+.[0-9]+.[0-9]+$' | awk -F'/' '{ print $NF }' | tail -1 | tail -c +2) && test -d /opt/powershell || (rm -fr /opt/powershell && mkdir -p /opt/powershell/${VERSION}/bin && wget --show-progress --progress=bar:force -qO - https://github.com/PowerShell/PowerShell/releases/download/v${VERSION}/powershell-${VERSION}-linux-x64.tar.gz | tar xz --no-same-owner -C /opt/powershell/${VERSION}) && cd /opt/powershell/${VERSION}/bin && ln -fs ../pwsh . && cd /opt/powershell && ln -fs ${VERSION} current", "chroot": "namespace" } ],
        "cmd_post": null,
        "junest_cmd_update": [ { "cmd": "VERSION=$(git ls-remote --tags https://github.com/PowerShell/PowerShell.git | egrep '/v[0-9]+.[0-9]+.[0-9]+$' | awk -F'/' '{ print $NF }' | tail -1 | tail -c +2) && test -d /opt/powershell/${VERSION} || (rm -fr /opt/powershell && mkdir -p /opt/powershell/${VERSION}/bin && wget --show-progress --progress=bar:force -qO - https://github.com/PowerShell/PowerShell/releases/download/v${VERSION}/powershell-${VERSION}-linux-x64.tar.gz | tar xz --no-same-owner -C /opt/powershell/${VERSION}) && cd /opt/powershell/${VERSION}/bin && ln -fs ../pwsh . && cd /opt/powershell && ln -fs ${VERSION} current", "chroot": "namespace" } ],
        "cmd_update": null,
        "zeal_pkg": [ "Powershell" ],
        "junest_env": { "PATH": "/opt/powershell/current/bin" },
        "vsc_env": { "PATH": "/opt/powershell/current/bin" }
    },
    "docker": {
        "enabled": false,
        "cmd_pre": null,
        "junest_cmd_pre": null,
        "junest_pkg": [ "docker"],
        "vsc_pkg": [ "PeterJausovec.vscode-docker" ],
        "vsc_settings": { "dash.docset.dockerfile": [ "docker" ],
                          "docker.showExplorer": false },
        "vsc_keyboard": null,
        "junest_cmd_post": null,
        "cmd_post": null,
        "junest_cmd_update": null,
        "cmd_update": null,
        "zeal_pkg": [ "Docker" ],
        "junest_env": null,
        "vsc_env": null
    },
    "ansible": {
        "enabled": false,
        "cmd_pre": null,
        "junest_cmd_pre": null,
        "junest_pkg": [ "ansible" ],
        "vsc_pkg": [ "vscoss.vscode-ansible" ],
        "vsc_settings": null,
        "vsc_keyboard": null,
        "junest_cmd_post": null,
        "cmd_post": null,
        "junest_cmd_update": null,
        "cmd_update": null,
        "zeal_pkg": [ "Ansible",
                      "Jinja" ],
        "junest_env": null,
        "vsc_env": null
    },
    "puppet": {
        "enabled": false,
        "cmd_pre": null,
        "junest_cmd_pre": null,
        "junest_pkg": [ "puppet",
                        "ruby",
                        "rubygems" ],
        "vsc_pkg": [ "jpogran.puppet-vscode" ],
        "vsc_settings": null,
        "vsc_keyboard": null,
        "junest_cmd_post": [ { "cmd": "gem list | egrep '^rdoc ' || PATH=$PATH:${Home_chroot}/.gem/ruby/2.5.0/bin gem install rdoc", "chroot": "namespace" },
                             { "cmd": "gem list | egrep '^puppet-lint ' || PATH=$PATH:${Home_chroot}/.gem/ruby/2.5.0/bin gem install puppet-lint", "chroot": "namespace" } ],
        "cmd_post": null,
        "junest_cmd_update": [ { "cmd": "gem update puppet-lint", "chroot": "namespace" } ],
        "cmd_update": null,
        "zeal_pkg": [ "Puppet" ],
        "junest_env": { "PATH": "${Home_chroot}/.gem/ruby/2.5.0/bin" },
        "vsc_env": { "PATH": "${Home_chroot}/.gem/ruby/2.5.0/bin" }
    },
    "saltstack": {
        "enabled": false,
        "cmd_pre": null,
        "junest_cmd_pre": null,
        "junest_pkg": null,
        "vsc_pkg": [ "korekontrol.saltstack" ],
        "vsc_settings": { "dash.docset.sls": [ "salt" ] },
        "vsc_keyboard": null,
        "junest_cmd_post": null,
        "cmd_post": null,
        "junest_cmd_update": null,
        "cmd_update": null,
        "zeal_pkg": [ "SaltStack",
                      "Jinja" ],
        "junest_env": null,
        "vsc_env": null
    },
    "chef": {
        "enabled": false,
        "cmd_pre": null,
        "junest_cmd_pre": null,
        "junest_pkg": [ "ruby",
                        "rubygems",
                        "gcc",
                        "make",
                        "file",
                        "awk" ],
        "vsc_pkg": [ "Pendrica.Chef" ],
        "vsc_settings": { "foodcritic.enable": true },
        "vsc_keyboard": null,
        "junest_cmd_post": [ { "cmd": "gem list | egrep '^rdoc ' || PATH=$PATH:${Home_chroot}/.gem/ruby/2.5.0/bin gem install rdoc", "chroot": "namespace" },
                             { "cmd": "gem list | egrep '^chef ' || PATH=$PATH:${Home_chroot}/.gem/ruby/2.5.0/bin gem install chef", "chroot": "namespace" },
                             { "cmd": "gem list | egrep '^cookstyle ' || PATH=$PATH:${Home_chroot}/.gem/ruby/2.5.0/bin gem install cookstyle", "chroot": "namespace" },
                             { "cmd": "gem list | egrep '^foodcritic ' || PATH=$PATH:${Home_chroot}/.gem/ruby/2.5.0/bin gem install foodcritic", "chroot": "namespace" },
                             { "cmd": "gem list | egrep '^rubocop ' || PATH=$PATH:${Home_chroot}/.gem/ruby/2.5.0/bin gem install rubocop", "chroot": "namespace" } ],
        "cmd_post": null,
        "junest_cmd_update": [ { "cmd": "gem update rdoc chef cookstyle foodcritic rubocop", "chroot": "namespace" } ],
        "cmd_update": null,
        "zeal_pkg": [ "Chef" ],
        "junest_env": { "PATH": "${Home_chroot}/.gem/ruby/2.5.0/bin" },
        "vsc_env": { "PATH": "${Home_chroot}/.gem/ruby/2.5.0/bin" }
    },
    "markdown": {
        "enabled": false,
        "cmd_pre": null,
        "junest_cmd_pre": null,
        "junest_pkg": null,
        "vsc_pkg": [ "DavidAnson.vscode-markdownlint",
                     "mdickin.markdown-shortcuts",
                     "AlanWalk.markdown-toc" ],
        "vsc_settings": { "markdown-toc.depthFrom": 2 },
        "vsc_keyboard": null,
        "junest_cmd_post": null,
        "cmd_post": null,
        "junest_cmd_update": null,
        "cmd_update": null,
        "zeal_pkg": [ "Markdown" ],
        "junest_env": null,
        "vsc_env": null
    },
    "restructuredtext": {
        "enabled": false,
        "cmd_pre": null,
        "junest_cmd_pre": null,
        "junest_pkg": [ "python3",
                        "python-pip" ],
        "vsc_pkg": [ "lextudio.restructuredtext" ],
        "vsc_settings": null,
        "vsc_keyboard": null,
        "junest_cmd_post": [ { "cmd": "pip3 install doc8 sphinx sphinx-autobuild", "chroot": "namespace" } ],
        "cmd_post": null,
        "junest_cmd_update": [ { "cmd": "pip3 install -U doc8 sphinx sphinx-autobuild", "chroot": "namespace" } ],
        "cmd_update": null,
        "zeal_pkg": null,
        "junest_env": null,
        "vsc_env": null
    }
}
}